{
  "$schema": "http://json-schema.org/draft-04/schema",
  "title": "MPEG_node_interactivity.trigger object",
  "type": "object",
  "description": "glTF extension to specify trigger formats at node level",
  "properties": {
    "type": {
      "type": "string",
      "description": "the type of the trigger. Value is oneOf TRIGGER_COLLISION, TRIGGER_PROXIMITY, TRIGGER_USER_INPUT, TRIGGER_VISIBILITY and can be extended"
    },
    "extensions": {},
    "extras": {}
  },
  "allOf": [
    {
      "$ref": "glTFProperty.schema.json"
    },
    {
      "if": {
        "properties": {
          "type": {
            "const": "TRIGGER_COLLISION"
          }
        },
        "required": [
          "type"
        ]
      },
      "then": {
        "properties": {
          "collider": {
            "type": "integer",
            "description": "the index of the mesh element that provides the collider geometry for the current node"
          },
          "static": {
            "type": "boolean",
            "default": true,
            "description": "If True, the collider is defined as a static collider"
          },
          "usePhysics": {
            "type": "boolean",
            "default": false,
            "description": "Indicates if the object shall be considered by the physics simulation"
          }
        },
        "required": [
          "collider",
          "static",
          "usePhysics"
        ],
        "allOf": [
          {
            "if": {
              "properties": {
                "usePhysics": {
                  "const": "true"
                }
              },
              "required": [
                "usePhysics"
              ]
            },
            "then": {
              "properties": {
                "useGravity": {
                  "type": "boolean",
                  "default": true,
                  "description": "Indicates if the gravity affects the object"
                },
                "mass": {
                  "type": "number",
                  "default": 1.0,
                  "description": "Mass of the object in kilogram"
                },
                "bounciness": {
                  "type": "number",
                  "default": 0.0,
                  "minimum": 0.0,
                  "maximum": 1.0,
                  "description": "Provides the amount that an object bounces in response to a collision"
                },
                "roughness": {
                  "type": "number",
                  "default": 0.5,
                  "minimum": 0.0,
                  "maximum": 1.0,
                  "description": "Provides the roughness of an object which affects how much the object moves in response to a collision"
                }
              },
              "required": [
                "useGravity",
                "mass",
                "bounciness",
                "roughness"
              ]
            }
          }
        ]
      }
    },
    {
      "if": {
        "properties": {
          "type": {
            "const": "TRIGGER_PROXIMITY"
          }
        },
        "required": [
          "type"
        ]
      },
      "then": {
        "properties": {
          "use_geocoordinates": {
            "type": "boolean",
            "description": "Indicates if geo coordinates are used"
          },
          "allow_occlusion": {
            "type": "boolean",
            "default": true,
            "description": "Indicates if occlusion by other nodes should be considered"
          },
          "upper_distance_weight": {
            "type": "number",
            "default": 1.0,
            "description": "The weight applied to the distanceUpperLimit parameter defined at scene level "
          },
          "lower_distance_weight": {
            "type": "number",
            "default": 1.0,
            "description": "The weight applied to the distanceLowerLimit parameter defined at scene level "
          }
        },
        "required": [
          "use_geocoordinates",
          "allow_occlusion"
        ],
        "allOf": [
          {
            "if": {
              "properties": {
                "use_geocoordinates": {
                  "const": "true"
                }
              },
              "required": [
                "use_geocoordinates"
              ]
            },
            "then": {
              "properties": {
                "geo_coordinate": {
                  "type": "integer",
                  "description": "Index to geo coordinate item in array in MPEG_GEO_COORDINATES extension "
                }
              },
              "required": [
                "geo_coordinate"
              ]
            }
          }
        ]
      }
    },
    {
      "if": {
        "properties": {
          "type": {
            "const": "TRIGGER_USER_INPUT"
          }
        },
        "required": [
          "type"
        ]
      },
      "then": {
        "properties": {
          "userInputParameters": {
            "type": "array",
            "items": {
              "type": "string"
            },
            "minItems": 1,
            "description": "Provides additional information related to the user inputs "
          }
        },
        "required": [
          "userInputParameters"
        ]
      }
    },
    {
      "if": {
        "properties": {
          "type": {
            "const": "TRIGGER_VISIBILITY"
          }
        },
        "required": [
          "type"
        ]
      },
      "then": {
        "properties": {
          "visibilityFull": {
            "type": "boolean",
            "default": true,
            "description": "Indicates if the visibility shall be full or partial to activate the trigger"
          },
          "nodes": {
            "type": "array",
            "items": {
              "type": "integer"
            },
            "minItems": 1,
            "description": "Set of nodes that shall not be considered for the visibility computation"
          },
          "mesh": {
            "type": "integer",
            "description": "Index of the mesh in the scene meshes array that will be used to compute visibility"
          }
        },
        "required": [
          "visibilityFull"
        ]
      }
    }
  ],
  "required": [
    "type"
  ]
}
{
    "$schema" : "http://json-schema.org/draft-04/schema",
    "title" : "Uniform",
    "type" : "object",
    "description" : "A uniform input to a technique, and an optional semantic and value.",
    "allOf" : [ { "$ref" : "glTFProperty.schema.json" } ],
    "properties" : {
        "count" : {
            "type" : "integer",
            "description" : "When defined, the uniform is an array of count elements of the specified type.  Otherwise, the uniform is not an array.",
            "minimum" : 1,
            "gltf_detailedDescription" : "When defined, the uniform is an array of `count` elements of the specified type.  Otherwise, the uniform is not an array.  When defined, `value`'s length must equal `count`, times the number of components in the `type`, e.g., `3` for `FLOAT_VEC3`.  A uniform array of scalar values is not the same as a uniform vector of the same size; for example, when count is 2 and type is `5126` (`FLOAT`), the uniform is an array of two floating-point values, not a `FLOAT_VEC2`. When a glTF-defined semantic is used, the semantic must be `JOINTMATRIX`; application-specific uniforms can be arrays and, therefore, define `count`."
        },
        "node" : {
            "allOf" : [ { "$ref" : "glTFid.schema.json" } ],
            "description" : "The index of the node whose transform is used as the uniform's value.",
            "gltf_detailedDescription" : "The index of the node whose transform is used as the uniform's value.  When this is defined, `type` must be `35676` (`FLOAT_MAT4`), therefore, when the semantic is `\"MODELINVERSETRANSPOSE\"`, `\"MODELVIEWINVERSETRANSPOSE\"`, or `\"VIEWPORT\"`, the node property can't be defined."
        },
        "type" : {
            "type" : "integer",
            "description" : "The uniform type.",
            "enum" : [5124, 5126, 35664, 35665, 35666, 35667, 35668, 35669, 35670, 35671, 35672, 35673, 35674, 35675, 35676, 35678],
            "gltf_enumNames" : ["INT", "FLOAT", "FLOAT_VEC2", "FLOAT_VEC3", "FLOAT_VEC4", "INT_VEC2", "INT_VEC3", "INT_VEC4", "BOOL", "BOOL_VEC2", "BOOL_VEC3", "BOOL_VEC4", "FLOAT_MAT2", "FLOAT_MAT3", "FLOAT_MAT4", "SAMPLER_2D"],
            "gltf_detailedDescription" : "The uniform type.  All valid values correspond to WebGL enums."
        },
        "semantic" : {
            "type" : "string",
            "description" : "Identifies a uniform with a well-known meaning.",
            "gltf_detailedDescription" : "Identifies a uniform with a well-known meaning.  Uniform semantics include `\"LOCAL\"` (FLOAT_MAT4), `\"MODEL\"` (FLOAT_MAT4), `\"VIEW\"` (FLOAT_MAT4), `\"PROJECTION\"` (FLOAT_MAT4), `\"MODELVIEW\"` (FLOAT_MAT4), `\"MODELVIEWPROJECTION\"` (FLOAT_MAT4), `\"MODELINVERSE\"` (FLOAT_MAT4), `\"VIEWINVERSE\"` (FLOAT_MAT4), `\"PROJECTIONINVERSE\"` (FLOAT_MAT4), `\"MODELVIEWINVERSE\"` (FLOAT_MAT4), `\"MODELVIEWPROJECTIONINVERSE\"` (FLOAT_MAT4), `\"MODELINVERSETRANSPOSE\"` (FLOAT_MAT3), `\"MODELVIEWINVERSETRANSPOSE\"` (FLOAT_MAT3), `\"VIEWPORT\"` (FLOAT_VEC4), `\"JOINTMATRIX\"` (FLOAT_MAT4[]).  For forward-compatibility, application-specific semantics must start with an underscore, e.g., `\"_SIMULATION_TIME\"`."
        },
        "value" : {
            "allOf" : [ { "$ref" : "uniform.value.schema.json" } ],
            "description" : "The value of the uniform.",
            "gltf_detailedDescription" : "The value of the uniform. The length is determined by the values of the `type` and `count` (if present) properties.  A material uniform value with the same name, when specified, overrides this value."
        },
        "extensions" : {},
        "extras" : {}
    },
    "required" : ["type"]
}
